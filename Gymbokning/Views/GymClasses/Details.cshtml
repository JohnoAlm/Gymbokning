@model Gymbokning.Models.GymClass
@inject IEnumerable<UserManager<ApplicationUser>> UserManager

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>GymClass</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StartTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Duration)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Duration)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "my-3 col-sm-2">
            <p>Booked members</p>
        </dt>

        @{
            foreach(var item in UserManager)
            {

                var userId = item.GetUserId(User);
                var user = await item.GetUserAsync(User);
                var email = user?.Email;

                var applicationUser = Model.AttendingMembers.Where(a => a.ApplicationUserId == userId);

                if(applicationUser != null)
                {
                    <dd>
                        @Html.DisplayFor(modelItem => email)
                    </dd>
                }
            }
        }

       

    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
